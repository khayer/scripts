#!/usr/bin/env ruby

usage =<<EOF

      #{$0} comb target other out_file

      ------------------------------------------------------
      * comb     :: combined_vcf
      * target   :: position in vcf file
      * other    :: position in vcf file
      * out      :: out_file
      ------------------------------------------------------

      - VERSION 2/4/2013 -----------------------------------

      ------------------------------------------------------
      Examined numbers by chromosome and by position
      on chromosomes

      format out:

      position score
      ...
      chr1 5032
      chr2 120343
      chr3 489085
      ...

      Additionally this script produces histogramm files that
      list the polomorphisms by location.

                                                       by khayer

EOF

# Functions:
def snp_exist?(info)
  !(info =~ /\.\/\./) && !(info =~ /0\/0/)
end

def snp_homo?(info)
  (info =~ /1\/1/) || (info =~ /2\/2/) || (info =~ /3\/3/) || (info =~ /0\/0/)
end

# _ Main _:
if ARGV.length != 4
  puts usage
  exit
end

combined_vcf = ARGV[0]
target_pos = ARGV[1].to_i + 8
other_pos = ARGV[2].to_i + 8
out_file = ARGV[3]
window_length = 125000

#randy = Random.rand(100000)+1
counter = 0
snps = []
chromosome = ''

File.open(combined_vcf).each do |line|
  next if line =~ /^#/  # getting rid of header lines
  line.chomp!
  line = line.split("\t")
  target_info = line[target_pos]
  other_info = line[other_pos]
  next unless snp_homo?(target_info) && snp_homo?(other_info)
  next unless target_info.split(":")[3].to_i >= 25 && other_info.split(":")[3].to_i >= 25
  next if target_info.split(":")[0] == other_info.split(":")[0]
  #puts target_info
  #puts other_info
  #STDIN.gets
  counter += 1
  chromosome = line[0]
  position = line[1].to_i
  snps[position/window_length] = 0 unless snps[position/window_length]
  snps[position/window_length] += 1
end

out = File.open("#{out_file}_poly.txt","w")
snps.each_with_index do |snp,i|
  if snp
    #out.puts("#{i*window_length}\t#{snp/counter.to_f}")
    #out.puts("#{i*window_length+window_length-1}\t#{snp/counter.to_f}")
    out.puts("#{i*window_length}\t#{snp}")
    out.puts("#{i*window_length+window_length-1}\t#{snp}")
  end
end

puts "#{chromosome}\t#{counter}"


