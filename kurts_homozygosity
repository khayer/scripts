#!/usr/bin/env ruby
usage =<<EOF
      #{$0} sorted.vcf sample_number
EOF

if ARGV.length != 2
  puts usage
  exit
end

def homozygous?(sample)
  sample =~ /0\/0/ || sample =~ /1\/1/ || sample =~ /2\/2/ || sample =~ /3\/3/
end

ten_highest = Array.new(10,0)
coordinates = Array.new(10,[0,0])


vcf = File.open(ARGV[0],'r')
sample_number = ARGV[1].to_i + 8
counter = 0
start_pos = 1
vcf.each do |line|
  line = line.chomp()
  if line =~ /^#/
    next
  end

  line = line.split(" ")
  next if line[7] == "LowQual"
  info = line[7]
  next if info == "."
  map_quality = info.split("MQ=")[1].split(";")[0].to_f
  next if map_quality < 25
  sample = line[9]
  next if sample =~ /\.\/\./
  #start_pos = line[1].to_i if counter == 0
  end_pos = line[1].to_i-1
  if homozygous?(sample)
    counter += 1
  else
    #puts "#{start_pos}\t#{end_pos}\t#{counter}"
    ten_highest.each_with_index do |value, i|
      if counter > value
        ten_highest[i] = counter
        coordinates[i] = [start_pos,end_pos]
        break
      end
    end
    counter = 0
    start_pos = line[1].to_i
  end
end
puts "Start\tEnd\tValue"
ten_highest.each_with_index do |value,i|
  ratio = value.to_f/(coordinates[i][1] - coordinates[i][0]).to_f
  puts "#{coordinates[i][0]}\t#{coordinates[i][1]}\t#{value}\t#{ratio}"
end