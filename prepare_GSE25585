#!/usr/bin/env ruby
require 'csv'
require 'rsruby'

usage =<<EOF
      #{$0} file.csv prepared.csv
EOF

if ARGV.length != 2
  puts usage
  exit
end

# functions
####################################################
R = RSRuby.instance()
R.eval_R("scaleData <- function(x) {
  k = (x-min(x))/(max(x)-min(x))*100
  k/100 * 90 + 5
}")

R.eval_R("avgData <- function(d) {
  dd <- filter(d,rep(0.33,3))
  dd[1] <- d[1]
  dd[length(dd)] <- d[length(d)]
  dd
}")
####################################################

out = File.new(ARGV[1],"w")

CSV.foreach(ARGV[0],  {:headers => :first_row}) do |row|

  numbers = []
  time_points = []
  time_points2 = []
  k = 0

  %w{0 4 8 12 16 20 24 28 32 36 40 44}.each do |i|
    number = row["CT#{i}"].to_f
    numbers << number
    time_points << i
    time_points2 << k.to_f
    k += 1
  end

  # elements must be different; error otherwise
  #test = numbers2.uniq
  #next if test.length == 1

  max = R.max(numbers).to_i
  min = R.min(numbers).to_i
  mid = R.mean(numbers)

  scaled = R.scaleData(numbers).map {|e| e.to_i }
  averaged = R.avgData(scaled).map {|e| e.to_i }
  scaled_time = R.scaleData(time_points2).map {|e| e.to_i }


  #cubase = "http://chart.apis.google.com/chart?chs=%sx%s&cht=lxy&chxt=x,y&chxl=0:|18||||||24||||||30||||||36||||||42||||||48||||||54||||||60|||1:|#{min}|#{mid}|#{max}&chxp=1,2,50,97&chxr=0,18,62&chls=2,1,0|2,1,0&chf=c,ls,0,CCCCCC,0.136363636,FFFFFF,0.27272727,CCCCCC,0.27272727,FFFFFF,0.27272727,CCCCCC,0.0454545455&chd=t:9.09,18.18,27.27,36.36,45.45,54.54,63.63|#{averaged2.join(",")}|-1|#{averaged.join(",")}&chm=d,3164A6,0,-1,8|d,FDB33A,1,-1,8&chco=3164A6,FDB33A&chdl=Clock_mutant|WT&chdlp=rs"
  #out.puts row["Probe Set"] +"@"+time_points.join(",")+"@"+numbers.join(",")+"@"+cubase

  #cubase = "http://chart.apis.google.com/chart?chs=%sx%s&cht=lc&chxt=x,y&chxl=0:|23||||||03||||||07||||||11||||||15||||||19|||1:|#{min}|#{mid}|#{max}|&chxp=1,2,50,97&chxr=0,18,66&chls=0,0,0|2,1,0&chf=c,ls,0,CCCCCC,0.125,FFFFFF,0.25,CCCCCC,0.25,FFFFFF,0.25,CCCCCC,0.125&chd=t:#{scaled.join(",")}|#{averaged.join(",")}&chco=3164A6,FDB33A&chm=o,555555,0,-1,5"
  #cubase2 = "https://chart.googleapis.com/chart?chs=500x225&chco=FDB33A&chc=corp&cht=lc&chd=t1:#{averaged.join(",")}%7C#{scaled_a.join(",")}%7C#{scaled_b.join(",")}%7C#{scaled_c.join(",")}&chm=F,000000,0,0:6,10&chxt=x,y&chxl=0:|#{time_points.join("|")}|1:%7C#{min.round(2)}%7C#{mid.round(2)}%7C#{max.round(2)}%7C&chxp=1,2,50,97&chxr=0,18,66&chf=c,ls,0,CCCCCC,0.125,FFFFFF,0.25,CCCCCC,0.25,FFFFFF,0.25,CCCCCC,0.125"
  cubase = "https://chart.googleapis.com/chart?cht=s&chd=t:#{scaled_time.join(",")},#{scaled_time.join(",")}|#{scaled.join(",")},#{averaged.join(",")}&chxt=x,y&chs=%sx%s&chm=o,0000FF,0,-1,0,0|o,000000,0,0:#{time_points.length-1}:,5,0.1|D,FDB33A,1,#{time_points.length}:,1,1&chxl=0:|#{time_points.join("|")}|1:|#{min.round(2)}|#{mid.round(2)}|#{max.round(2)}|&chxp=0,#{scaled_time.join(',')}|1,2,50,97&chf=c,ls,0,CCCCCC,0.05,FFFFFF,0.24,CCCCCC,0.25,FFFFFF,0.24,CCCCCC,0.24"
  out.puts "#{row["probeset_id"]}@#{time_points.join(",")}@#{numbers.join(",")}@#{cubase}"

end